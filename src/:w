/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_heatmap.c                                       :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: jallen <marvin@42.fr>                      +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2019/03/04 15:32:30 by jallen            #+#    #+#             */
/*   Updated: 2019/03/04 17:40:23 by jallen           ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "../includes/filler.h"

char	**pos_heatmap(int **tab, int x, int y, t_point p)
{
	if (p.y < y - 1 && p.x < x && tab[y - 1][x] == 0)
		tab[y - 1][x] = 1;
	if (p.y < y - 1 && p.x < x + 1 && tab[y - 1][x + 1] == 0)
		tab[y - 1][x + 1] = 1;
	if (p.y < y  && p.x < x + 1 && tab[y][x + 1] == 0)
		tab[y][x + 1] = 1;
	if (p.y < y + 1 && p.x < x + 1 && tab[y + 1][x + 1] == 0)
		tab[y + 1][x + 1] = 1;
	if (p.y < y + 1 && p.x < x && tab[y + 1][x] == 0)
		tab[y + 1][x] = 1;
	if (p.y < y + 1 && p.x < x - 1 && tab[y + 1][x - 1] == 0)
		tab[y + 1][x - 1] = 1;
	if (p.y < y && p.x < x - 1 && tab[y][x - 1] == 0)
		tab[y][x - 1] = 1;
	if (p.y < y - 1 && p.x < x - 1 && tab[y - 1][x - 1] == 0)
		tab[y - 1][x - 1] = 1;
	return (tab);
}

void	set_min(int	**tab, t_point p)
{
	int	i;
	int	j;

	i = 0;
	while (i < p.y)
	{
		j = 0;
		while (j < p.x)
		{
			if (tab[i][j] == -2)
				tab = pos_heatmap(tab, x, y, p);
			j++;
		}
		i++;	
	}
}

void	ft_heatmap(t_fl *filler)
{
	get_index(filler->int_map, filler->axis);
	ft_print_int(filler->int_map, filler->axis.x, filler->axis.y);
}
